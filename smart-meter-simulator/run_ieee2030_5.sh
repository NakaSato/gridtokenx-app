#!/usr/bin/env bash
# GridTokenX IEEE 2030.5 Smart Meter Simulator
# Usage Guide and Quick Start Script

set -e

echo "🏫 GridTokenX IEEE 2030.5 Smart Meter Simulator"
echo "=============================================="
echo ""

# Check if virtual environment is active
if [[ "$VIRTUAL_ENV" != "" ]]; then
    echo "✅ Python virtual environment active: $VIRTUAL_ENV"
else
    echo "❌ Python virtual environment not active"
    echo "Run: source .venv/bin/activate"
    exit 1
fi

echo ""
echo "📋 Available Commands:"
echo "======================"
echo ""
echo "1. 🧪 Run IEEE 2030.5 Tests:"
echo "   python3 test_ieee2030_5.py"
echo ""
echo "2. 🚀 Start Smart Meter Simulator (Basic):"
echo "   python3 simulator.py"
echo ""
echo "3. � Start Smart Meter Simulator with IEEE 2030.5:"
echo "   python3 simulator.py --enable-ieee2030-5"
echo ""
echo "4. 🔧 Start with Custom IEEE 2030.5 Port:"
echo "   python3 simulator.py --enable-ieee2030-5 --ieee2030-5-port 8444"
echo ""
echo "5. 📊 Check Simulator Health:"
echo "   curl http://localhost:4040/health"
echo ""
echo "6. � Check IEEE 2030.5 Status (if enabled):"
echo "   curl http://localhost:4040/api/ieee2030_5/status"
echo ""
echo "7. � Get Campus Summary:"
echo "   curl http://localhost:4040/api/campus/summary"
echo ""
echo "8. 📏 Get All Meters:"
echo "   curl http://localhost:4040/api/meters"
echo ""
echo "9. 📋 View Recent Logs:"
echo "   tail -f logs/simulator.log"
echo ""
echo "10. 🛑 Stop All Processes:"
echo "    pkill -f simulator.py"
echo ""
echo "🔧 Configuration Files:"
echo "======================="
echo "- .env (environment variables)"
echo "- config/utcc_campus_config.json (25-meter campus config)"
echo "- pyproject.toml (dependencies)"
echo ""
echo "📁 IEEE 2030.5 Components:"
echo "=========================="
echo "- ieee2030_5/resources.py (protocol resource models)"
echo "- ieee2030_5/security.py (X.509 certificate management)"
echo "- ieee2030_5/function_sets.py (DRLC, CSIP, Pricing, P2P)"
echo "- ieee2030_5/server.py (IEEE 2030.5 server implementation)"
echo "- ieee2030_5/client.py (IEEE 2030.5 client for device communication)"
echo "- ieee2030_5_simulator.py (integration with main simulator)"
echo ""
echo "🎯 Quick Start:"
echo "==============="
echo "1. Ensure virtual environment is active"
echo "2. Run tests: python3 test_ieee2030_5.py"
echo "3. Start simulator: python3 simulator.py"
echo "4. Check health: curl http://localhost:4040/health"
echo "5. View campus data: curl http://localhost:4040/api/campus/summary"
echo ""
echo "📚 Documentation:"
echo "================="
echo "- IEEE2030_5_IMPLEMENTATION_PLAN.md (comprehensive implementation guide)"
echo "- README.md (project overview)"
echo ""
echo "🏗️  Architecture:"
echo "================="
echo "Smart Meters (25) → IEEE 2030.5 Protocol → API Gateway → Oracle Service → Blockchain"
echo ""
echo "✅ Status: IEEE 2030.5 Smart Energy Profile 2.0 fully implemented and tested"
echo "🏫 Campus: 25-meter UTCC University network with P2P trading (300 bilateral pairs)"
echo "🔐 Security: TLS 1.2+ with X.509 certificates for all meters"
echo "⚡ Trading: Bidirectional energy flows with dynamic role switching"
echo "🔄 Integration: Merged simulator with optional IEEE 2030.5 support"
echo ""
echo "Ready to start! 🚀"