# Production Docker Compose Override
# Use: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

version: '3.8'

services:
  # Production Frontend with SSL
  frontend:
    environment:
      VITE_ENVIRONMENT: production
      VITE_SOLANA_CLUSTER: mainnet-beta
    restart: always
    
  # Production API Gateway with enhanced security
  api-gateway:
    environment:
      ENVIRONMENT: production
      LOG_LEVEL: warn
      RATE_LIMIT_WINDOW: 60
      MAX_CONNECTIONS: 200
      RUST_LOG: "api_gateway=warn,tower_http=warn,sqlx=error"
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
          
  # Production database with performance tuning
  postgres:
    environment:
      POSTGRES_SHARED_PRELOAD_LIBRARIES: pg_stat_statements
    command: >
      postgres 
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
          
  # Production Redis with persistence
  redis:
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'
          
  # Production Solana validator with optimizations
  solana-validator:
    environment:
      RUST_LOG: "solana=warn"
      START_VALIDATOR: "true"
      SKIP_DEPLOYMENT: "false"
    restart: always
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
          
  # Production monitoring with retention
  prometheus:
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    restart: always
    
  # Production Grafana with security
  grafana:
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
      GF_SECURITY_SECRET_KEY: ${GRAFANA_SECRET_KEY:-change_me_in_production}
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_AUTH_ANONYMOUS_ENABLED: "false"
      GF_SECURITY_COOKIE_SECURE: "true"
      GF_SECURITY_COOKIE_SAMESITE: "strict"
    restart: always
    
  # Production Nginx with SSL termination
  nginx:
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
    restart: always
    depends_on:
      - api-gateway
      - frontend
      
networks:
  p2p-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16